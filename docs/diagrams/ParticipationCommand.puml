@startuml
title Participation Command (UG)

skinparam sequence {
    ArrowThickness 1
    LifeLineBorderColor #999999
    ParticipantBorderColor #666666
    ParticipantBackgroundColor #f8f8f8
    BoxBorderColor #bbbbbb
}

actor User
participant "AddressBookParser" as ABP
participant "ParticipationCommandParser" as PCP
participant "ParticipationCommand" as PC
participant "Model" as M
participant "ReadOnlyAddressBook" as AB
participant "Person" as P
participant "ParticipationHistory" as PH
participant "AttendanceIndex" as AI
participant "UI (PersonCard)" as UI

== Enter command ==
User -> ABP : "participation n/NAME d/DATE s/SCORE"

== Parse ==
ABP -> PCP : parse(args)
PCP --> ABP : AttendanceCommand

== Execute ==
ABP -> PC : execute(model)

PC -> M : getAddressBook()
M --> PC : AB
PC -> AB : getPersonList()
AB --> PC : List<Person>

note right of PC
  Finds Person by normalized name.
  Validates date and score (0..5).
end note

PC -> P : getParticipation()
P --> PC : PH
PC -> PH : add( ParticipationRecord(date, score) )

PC -> M : getAttendanceIndex()
M --> PC : AI
PC -> AI : setCurrentUiDate(date)

PC -> M : updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS)
M --> UI : (list refreshed)

PC --> User : "Success: Participation recorded: NAME, DATE, score=S."

@enduml
