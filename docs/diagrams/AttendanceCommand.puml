@startuml
title Participation Command (UG)

skinparam sequence {
  ArrowThickness 1
  LifeLineBorderColor #999999
  ParticipantBorderColor #666666
  ParticipantBackgroundColor #f8f8f8
  BoxBorderColor #bbbbbb
}

actor User
participant "AddressBookParser" as ABP
participant "AttendanceCommandParser" as ACP
participant "AttendanceCommand" as AC
participant "Model" as M
participant "ReadOnlyAddressBook" as AB
participant "Person" as P
participant "ParticipationHistory" as PH
participant "AttendanceIndex" as AI
participant "UI (PersonCard)" as UI

== Enter command ==
User -> ABP : "attendance n/NAME d/DATE s/SCORE"

== Parse ==
ABP -> ACP : parse(args)
ACP --> ABP : AttendanceCommand

== Execute ==
ABP -> AC : execute(model)

AC -> M : getAddressBook()
M --> AC : AB
AC -> AB : getPersonList()
AB --> AC : List<Person>

note right of AC
  Finds Person by normalized name.
  Validates date and score (0..5).
end note

AC -> P : getParticipation()
P --> AC : PH
AC -> PH : add( ParticipationRecord(date, score) )

AC -> M : getAttendanceIndex()
M --> AC : AI
AC -> AI : setCurrentUiDate(date)

AC -> M : updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS)
M --> UI : (list refreshed)

AC --> User : "Success: Participation recorded: NAME, DATE, score=S."

@enduml
